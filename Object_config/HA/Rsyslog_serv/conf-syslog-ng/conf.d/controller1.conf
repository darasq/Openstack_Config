template t_template {
  template("$DATE $HOST $PRIORITY $MSGHDR$MSG\n");
  template_escape(no);
};
template t_haproxy_access {
  template("$MSG\n");
  template_escape(no);
};
template t_haproxy_status {
  template("$DATE $HOST $PRIORITY $MSGHDR$MSG\n");
  template_escape(no);
};


destination d_controller1-haproxy-access {
  file(
    "/var/log/controller1/haproxy_access.log",
    template(t_haproxy_access));
};
destination d_controller1-haproxy-status {
  file(
    "/var/log/controller1/haproxy_status.log",
    template(t_haproxy_status));
};
destination d_controller1-glance {
  file(
    "/var/log/controller1/glance.log",
    template(t_template));
};
destination d_controller1-nova {
  file(
    "/var/log/controller1/nova.log",
    template(t_template));
};
destination d_controller1-cinder {
  file(
    "/var/log/controller1/cinder.log",
    template(t_template));
};
destination d_controller1-horizon {
  file(
    "/var/log/controller1/horizon.log",
    template(t_template));
};


filter f_controller1-haproxy-access {
  program(haproxy) 
  and level(info) 
  and host("controller"); 
};
filter f_controller1-haproxy-status {
  program(haproxy) 
  and not level(info) 
  and host("controller"); 
};
filter f_controller1-glance {
  program("glance*")
  and host("controller");
};
filter f_controller1-nova {
  program("nova*")
  and host("controller");
};
filter f_controller1-cinder {
  program("cinder*");
  and host("controller");
};
filter f_controller1-horizon {
  match("dashboard/*")
  and host("controller");
};

log { source(s_net); filter(f_controller1-glance); destination(d_controller1-glance); };
log { source(s_net); filter(f_controller1-nova); destination(d_controller1-nova); };
log { source(s_net); filter(f_controller1-cinder); destination(d_controller1-cinder); };
log { source(s_net); filter(f_controller1-horizon); destination(d_controller1-horizon); };
log { source(s_net); filter(f_controller1-haproxy-access); destination(d_controller1-haproxy-access); };
log { source(s_net); filter(f_controller1-haproxy-status); destination(d_controller1-haproxy-status); };
