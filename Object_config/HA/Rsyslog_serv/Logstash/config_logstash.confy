input {
    file {
	type => "syslog_openstack"
        path => [ "/var/log/node1/compute.log" ]
    }
}
input {
    file {
	type => "syslog_openstack"
        path => [ "/var/log/controller1/cinder.log" ]
    }
}
input {
    file {
	type => "syslog_haproxy"
        path => [ "/var/log/controller1/haproxy_access.log" ]
    }
}


filter {
  if [type] == "syslog_openstack" {
    grok {
      match => { "message" => "%{SYSLOGTIMESTAMP:syslog_timestamp} %{SYSLOGHOST:syslog_hostname} %{WORD:level} %{SYSLOGPROG:syslog_program}?: %{GREEDYDATA:syslog_message}" }
      add_field => [ "received_at", "%{syslog_timestamp}" ]
      add_field => [ "received_from", "%{syslog_hostname}" ]
    }
    syslog_pri { }
    date {
      match => { "syslog_timestamp" => [ "MMM  d HH:mm:ss", "MMM dd HH:mm:ss", "ISO8601" ] }
    }
    if !("_grokparsefailure" in [tags]) {
       mutate {
        replace => [ "@source_host", "%{syslog_hostname}" ]
        replace => [ "@message", "%{syslog_message}" ]
      }
    } else if ("_grokparsefailure" in [tags]) {
       mutate {
        replace => [ "@message", "error" ]
        replace => [ "@source_host", "error" ]
        }

    }
    mutate {
      remove_field => [ "syslog_hostname", "syslog_message", "syslog_timestamp" ]
    }
}
if [type] == "syslog_haproxy" {
    grok {
     match => { "message" => "%{SYSLOGTIMESTAMP:syslog_timestamp} %{SYSLOGHOST:syslog_hostname} %{SYSLOGPROG:syslog_program}?: %{GREEDYDATA:syslog_message}" }
     add_field => [ "received_at", "%{syslog_timestamp}" ]
     add_field => [ "received_from", "%{syslog_hostname}" ]
    }
    syslog_pri { }
    date {
      match => { "syslog_timestamp" => [ "MMM  d HH:mm:ss", "MMM dd HH:mm:ss", "ISO8601" ] }
    }
    if !("_grokparsefailure" in [tags]) {
      mutate {
        replace => [ "@source_host", "%{syslog_hostname}" ]
        replace => [ "@message", "%{syslog_message}" ]
	}
     } else if ("_grokparsefailure" in [tags]) {
       mutate {
        replace => [ "@message", "error" ]
        replace => [ "@source_host", "error" ]
        }
      
    }
    mutate {
      remove_field => [ "syslog_hostname", "syslog_message", "syslog_timestamp" ]
    }
  }
}


output {
stdout {
    debug => true
  }
elasticsearch {
	host => "127.0.0.1"
}

}


