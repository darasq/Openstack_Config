input {
    file {
	type => "syslog"
        path => [ "/var/log/controller1/compute.log" ]
    }
}

filter {
  if [type] == "syslog" {
#    date {
#      match => { "syslog_timestamp" => [ "MMM  d HH:mm:ss", "MMM dd HH:mm:ss" ] }
#    }
    grok {
      match => { "message" => "%{SYSLOGTIMESTAMP:syslog_timestamp} %{SYSLOGHOST:syslog_hostname} %{SYSLOGPROG:syslog_program}?:  %{GREEDYDATA:syslog_message}" }
     # match => { "message" => "%{SYSLOGHOST:syslog_hostname} %{SYSLOGPROG:syslog_program}?:  %{GREEDYDATA:syslog_message}" }
      add_field => [ "received_at", "%{syslog_timestamp}" ]
      add_field => [ "received_from", "%{syslog_hostname}" ]
    }
    syslog_pri { }
#    date {
#      match => { "syslog_timestamp" => [ "MMM d  HH:mm:ss", "MMM dd  HH:mm:ss" ] }
#    }
    if !("_grokparsefailure" in [type]) {
      mutate {
        replace => [ "@timestamp", "%{syslog_timestamp}" ]
        replace => [ "@source_host", "%{syslog_hostname}" ]
        replace => [ "@message", "%{syslog_message}" ]
      }
    }
    mutate {
      remove_field => [ "syslog_hostname", "syslog_message", "syslog_timestamp" ]
    }
  }
}


output {
#    file {
#        type => "mutated"
#        path => "/var/log/sortie.log"
#        flush_interval => 0
#	message_format =>
#        message_format => "CN: %{givenname} %{sn}  (%{@timestamp})"
#    }
stdout {
    debug => true
  }
}


